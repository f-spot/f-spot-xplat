// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;

#region Autogenerated code
	public interface Drive : GLib.IWrapper {

		event EventHandler Changed;
		event EventHandler EjectButton;
		event EventHandler Disconnected;
		event EventHandler StopButton;
		void Stop(MountUnmountFlags flags, MountOperation mount_operation, Cancellable cancellable, AsyncReadyCallback cb);
		void PollForMedia(Cancellable cancellable, AsyncReadyCallback cb);
		bool StartFinish(AsyncResult result);
		Icon Icon { 
			get;
		}
		bool HasMedia { 
			get;
		}
		bool CanEject();
		void Start(DriveStartFlags flags, MountOperation mount_operation, Cancellable cancellable, AsyncReadyCallback cb);
		string EnumerateIdentifiers();
		GLib.List Volumes { 
			get;
		}
		bool IsMediaCheckAutomatic { 
			get;
		}
		void EjectWithOperation(MountUnmountFlags flags, MountOperation mount_operation, Cancellable cancellable, AsyncReadyCallback cb);
		bool CanStartDegraded();
		DriveStartStopType StartStopType { 
			get;
		}
		bool PollForMediaFinish(AsyncResult result);
		bool StopFinish(AsyncResult result);
		void Eject(MountUnmountFlags flags, Cancellable cancellable, AsyncReadyCallback cb);
		string Name { 
			get;
		}
		string GetIdentifier(string kind);
		bool IsMediaRemovable { 
			get;
		}
		bool HasVolumes { 
			get;
		}
		bool EjectWithOperationFinish(AsyncResult result);
		bool CanStop();
		bool CanStart();
		bool CanPollForMedia();
		bool EjectFinish(AsyncResult result);
	}
#endregion
}
