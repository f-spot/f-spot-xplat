// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class IOModule : GLib.Object {

		[Obsolete]
		protected IOModule(GLib.GType gtype) : base(gtype) {}
		public IOModule(IntPtr raw) : base(raw) {}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_io_module_new(IntPtr filename);

		public IOModule (string filename) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (IOModule)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			Raw = g_io_module_new(native_filename);
			GLib.Marshaller.Free (native_filename);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_io_module_load(IntPtr raw);

		public void Load() {
			g_io_module_load(Handle);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_io_module_get_type();

		public static new GLib.GType GType { 
			get {
				var raw_ret = g_io_module_get_type();
				var ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_io_module_unload(IntPtr raw);

		public void Unload() {
			g_io_module_unload(Handle);
		}

#endregion
	}
}
