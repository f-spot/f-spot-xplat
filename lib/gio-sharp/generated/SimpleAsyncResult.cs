// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class SimpleAsyncResult : GLib.Object, AsyncResult
	{

		[Obsolete]
		protected SimpleAsyncResult(GLib.GType gtype) : base(gtype) {}
		public SimpleAsyncResult(IntPtr raw) : base(raw) {}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_simple_async_result_new(IntPtr source_object, GLibSharp.AsyncReadyCallbackNative cb, IntPtr user_data, IntPtr source_tag);

		public SimpleAsyncResult (GLib.Object source_object, AsyncReadyCallback cb, IntPtr source_tag) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (SimpleAsyncResult)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			var cb_wrapper = new GLibSharp.AsyncReadyCallbackWrapper (cb);
			Raw = g_simple_async_result_new(source_object == null ? IntPtr.Zero : source_object.Handle, cb_wrapper.NativeDelegate, IntPtr.Zero, source_tag);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_simple_async_result_new_from_error(IntPtr source_object, GLibSharp.AsyncReadyCallbackNative cb, IntPtr user_data, IntPtr error);

		public static SimpleAsyncResult NewFromError(GLib.Object source_object, AsyncReadyCallback cb, IntPtr error)
		{
			var cb_wrapper = new GLibSharp.AsyncReadyCallbackWrapper (cb);
			var result = new SimpleAsyncResult (g_simple_async_result_new_from_error(source_object == null ? IntPtr.Zero : source_object.Handle, cb_wrapper.NativeDelegate, IntPtr.Zero, error));
			return result;
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_simple_async_result_get_op_res_gpointer(IntPtr raw);

		public IntPtr OpResGpointer { 
			get {
				var raw_ret = g_simple_async_result_get_op_res_gpointer(Handle);
				var ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_set_handle_cancellation(IntPtr raw, bool handle_cancellation);

		public bool HandleCancellation { 
			set {
				g_simple_async_result_set_handle_cancellation(Handle, value);
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_complete(IntPtr raw);

		public void Complete() {
			g_simple_async_result_complete(Handle);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_simple_async_result_get_op_res_gssize(IntPtr raw);

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_set_op_res_gssize(IntPtr raw, IntPtr op_res);

		public long OpResGssize { 
			get {
				var raw_ret = g_simple_async_result_get_op_res_gssize(Handle);
				long ret = (long) raw_ret;
				return ret;
			}
			set {
				g_simple_async_result_set_op_res_gssize(Handle, new IntPtr (value));
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern bool g_simple_async_result_get_op_res_gboolean(IntPtr raw);

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_set_op_res_gboolean(IntPtr raw, bool op_res);

		public bool OpResGboolean { 
			get {
				bool raw_ret = g_simple_async_result_get_op_res_gboolean(Handle);
				bool ret = raw_ret;
				return ret;
			}
			set {
				g_simple_async_result_set_op_res_gboolean(Handle, value);
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_simple_async_result_get_source_tag(IntPtr raw);

		public IntPtr SourceTag { 
			get {
				var raw_ret = g_simple_async_result_get_source_tag(Handle);
				var ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_set_from_error(IntPtr raw, IntPtr error);

		public IntPtr FromError { 
			set {
				g_simple_async_result_set_from_error(Handle, value);
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_set_op_res_gpointer(IntPtr raw, IntPtr op_res, GLib.DestroyNotify destroy_op_res);

		public void SetOpResGpointer(IntPtr op_res, GLib.DestroyNotify destroy_op_res) {
			g_simple_async_result_set_op_res_gpointer(Handle, op_res, destroy_op_res);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_run_in_thread(IntPtr raw, GLibSharp.SimpleAsyncThreadFuncNative func, int io_priority, IntPtr cancellable);

		public void RunInThread(SimpleAsyncThreadFunc func, int io_priority, Cancellable cancellable) {
			var func_wrapper = new GLibSharp.SimpleAsyncThreadFuncWrapper (func);
			g_simple_async_result_run_in_thread(Handle, func_wrapper.NativeDelegate, io_priority, cancellable == null ? IntPtr.Zero : cancellable.Handle);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_set_error_va(IntPtr raw, int domain, int code, IntPtr format, IntPtr args);

		public void SetErrorVa(int domain, int code, string format, IntPtr args) {
			IntPtr native_format = GLib.Marshaller.StringToPtrGStrdup (format);
			g_simple_async_result_set_error_va(Handle, domain, code, native_format, args);
			GLib.Marshaller.Free (native_format);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern void g_simple_async_result_complete_in_idle(IntPtr raw);

		public void CompleteInIdle() {
			g_simple_async_result_complete_in_idle(Handle);
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern bool g_simple_async_result_is_valid(IntPtr result, IntPtr source, IntPtr source_tag);

		public static bool IsValid(AsyncResult result, GLib.Object source, IntPtr source_tag) {
			bool raw_ret = g_simple_async_result_is_valid(result == null ? IntPtr.Zero : result.Handle, source == null ? IntPtr.Zero : source.Handle, source_tag);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_simple_async_result_get_type();

		public static new GLib.GType GType { 
			get {
				var raw_ret = g_simple_async_result_get_type();
				var ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern unsafe bool g_simple_async_result_propagate_error(IntPtr raw, out IntPtr dest);

		public unsafe bool PropagateError() {
			var error = IntPtr.Zero;
			bool raw_ret = g_simple_async_result_propagate_error(Handle, out error);
			bool ret = raw_ret;
			if (error != IntPtr.Zero) throw new GLib.GException (error);
			return ret;
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_async_result_get_source_object(IntPtr raw);

		public GLib.Object SourceObject { 
			get {
				var raw_ret = g_async_result_get_source_object(Handle);
				GLib.Object ret = GLib.Object.GetObject (raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll")]
		static extern IntPtr g_async_result_get_user_data(IntPtr raw);

		public IntPtr UserData { 
			get {
				var raw_ret = g_async_result_get_user_data(Handle);
				var ret = raw_ret;
				return ret;
			}
		}

#endregion
	}
}
