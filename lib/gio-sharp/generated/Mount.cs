// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;

#region Autogenerated code
	public interface Mount : GLib.IWrapper {

		event EventHandler PreUnmount;
		event EventHandler Changed;
		event EventHandler Unmounted;
		string[] GuessContentTypeSync(bool force_rescan, Cancellable cancellable);
		bool UnmountFinish(AsyncResult result);
		Volume Volume { 
			get;
		}
		File Root { 
			get;
		}
		bool CanUnmount { 
			get;
		}
		Icon Icon { 
			get;
		}
		bool CanEject();
		void Shadow();
		bool UnmountWithOperationFinish(AsyncResult result);
		void EjectWithOperation(MountUnmountFlags flags, MountOperation mount_operation, Cancellable cancellable, AsyncReadyCallback cb);
		void GuessContentType(bool force_rescan, Cancellable cancellable, AsyncReadyCallback cb);
		void Remount(MountMountFlags flags, MountOperation mount_operation, Cancellable cancellable, AsyncReadyCallback cb);
		string[] GuessContentTypeFinish(AsyncResult result);
		bool RemountFinish(AsyncResult result);
		void Eject(MountUnmountFlags flags, Cancellable cancellable, AsyncReadyCallback cb);
		string Name { 
			get;
		}
		Drive Drive { 
			get;
		}
		void UnmountWithOperation(MountUnmountFlags flags, MountOperation mount_operation, Cancellable cancellable, AsyncReadyCallback cb);
		void Unmount(MountUnmountFlags flags, Cancellable cancellable, AsyncReadyCallback cb);
		string Uuid { 
			get;
		}
		void Unshadow();
		bool EjectWithOperationFinish(AsyncResult result);
		bool IsShadowed { 
			get;
		}
		bool EjectFinish(AsyncResult result);
	}
#endregion
}
